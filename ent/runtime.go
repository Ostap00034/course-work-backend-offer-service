// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/Ostap00034/course-work-backend-offer-service/ent/offer"
	"github.com/Ostap00034/course-work-backend-offer-service/ent/schema"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	offerFields := schema.Offer{}.Fields()
	_ = offerFields
	// offerDescPrice is the schema descriptor for price field.
	offerDescPrice := offerFields[4].Descriptor()
	// offer.DefaultPrice holds the default value on creation for the price field.
	offer.DefaultPrice = offerDescPrice.Default.(float32)
	// offerDescCreatedAt is the schema descriptor for created_at field.
	offerDescCreatedAt := offerFields[5].Descriptor()
	// offer.DefaultCreatedAt holds the default value on creation for the created_at field.
	offer.DefaultCreatedAt = offerDescCreatedAt.Default.(func() time.Time)
	// offerDescUpdatedAt is the schema descriptor for updated_at field.
	offerDescUpdatedAt := offerFields[6].Descriptor()
	// offer.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	offer.DefaultUpdatedAt = offerDescUpdatedAt.Default.(func() time.Time)
	// offer.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	offer.UpdateDefaultUpdatedAt = offerDescUpdatedAt.UpdateDefault.(func() time.Time)
	// offerDescID is the schema descriptor for id field.
	offerDescID := offerFields[0].Descriptor()
	// offer.DefaultID holds the default value on creation for the id field.
	offer.DefaultID = offerDescID.Default.(func() uuid.UUID)
}
